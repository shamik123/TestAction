on: 
 workflow_dispatch:
    inputs:
      environement_type:
        description: 'Environment type'
        required: true
        default: '2'
        type: choice
        options:
          - 0
          - 1
          - 2
          - 3
      target_id:
        description: target_id'
        type: string
        default: 'dcb2335c-a923-4605-a642-5cecff88e450'
      test_plan:
        description: 'Test plan id'
        type: string
        default: '257185f9-04a7-43b4-8b5c-9503ad10a32e'
      test_suite:
        description: 'test suite id'
        type: string
        default: 'e93977b0-d62f-4207-9ef8-64930d7130b2'
jobs:
  hello_world_job:
    runs-on: self-hosted
    name: Runs Studio cli
    env: # Environment variables at the job level
      MY_USER: ${{ secrets.MY_USER }}
      MY_STUDIO: ${{ secrets.MY_STUDIO }}
      MY_PW: ${{ secrets.MY_PW }}
    steps:
      - name: reserving virtual target
        id: virtual
        uses: shamik123/ShamikAction@shamiktestaction52
        with:
          studio-cli-command: 'studio-cli vlab virtual reserve --id ${{ inputs.target_id }} --hours 1 --var artifact_path=workspace-se/builds/michael-foglia/zcu_102_TEST/2403/vip -a --jq .data'
      - name: Extract reservation details
        id: extract_details
        run: |
          id=$(echo '${{ steps.virtual.outputs.message }}' | jq -r '.data.id') 
          echo "reservation_id=$id" >> $GITHUB_ENV 
          url=$(echo '${{ steps.virtual.outputs.message }}' | jq -r '.data.url') 
          echo "url=$url" >> $GITHUB_ENV
      - name: setup-taf
        id: setup-taf
        run: |
          jq -n -R '{"testSuitesEnvironments":[{"id": "", "environments": [{"type": 2, "value": ""} ] } ] }' > sample.json
          echo ""
          echo "Initial sample.json file..."
          cat sample.json 
          jq --arg a ${{ inputs.test_suite }} '.testSuitesEnvironments[].id = $a' sample.json > update.json
          cat update.json    
          jq --arg a  "${{ env.url }}" '.testSuitesEnvironments[].environments[].value = $a' update.json > final.json
          cat final.json
      - name: taf
        id: taf
        uses: shamik123/ShamikAction@shamiktestaction52
        with:
          studio-cli-command: 'studio-cli taf execution run -p ${{ inputs.test_plan }} -f final.json'
